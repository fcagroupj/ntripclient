#############################################################################
# Makefile for building: libnewmat.a
# Generated by qmake (2.01a) (Qt 4.8.5) on: Mon Oct 23 02:11:11 2023
# Project:  newmat.pro
# Template: lib
# Command: /usr/local/Trolltech/Qt-4.8.5/bin/qmake -o Makefile newmat.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/Qt-4.8.5/mkspecs/linux-g++ -I. -I/usr/local/Trolltech/Qt-4.8.5/include/QtCore -I/usr/local/Trolltech/Qt-4.8.5/include/QtGui -I/usr/local/Trolltech/Qt-4.8.5/include -I.moc
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/Trolltech/Qt-4.8.5/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = bandmat.cpp \
		cholesky.cpp \
		evalue.cpp \
		fft.cpp \
		hholder.cpp \
		jacobi.cpp \
		myexcept.cpp \
		newfft.cpp \
		newmat1.cpp \
		newmat2.cpp \
		newmat3.cpp \
		newmat4.cpp \
		newmat5.cpp \
		newmat6.cpp \
		newmat7.cpp \
		newmat8.cpp \
		newmat9.cpp \
		newmatex.cpp \
		newmatrm.cpp \
		nm_misc.cpp \
		sort.cpp \
		submat.cpp \
		svd.cpp 
OBJECTS       = .obj/bandmat.o \
		.obj/cholesky.o \
		.obj/evalue.o \
		.obj/fft.o \
		.obj/hholder.o \
		.obj/jacobi.o \
		.obj/myexcept.o \
		.obj/newfft.o \
		.obj/newmat1.o \
		.obj/newmat2.o \
		.obj/newmat3.o \
		.obj/newmat4.o \
		.obj/newmat5.o \
		.obj/newmat6.o \
		.obj/newmat7.o \
		.obj/newmat8.o \
		.obj/newmat9.o \
		.obj/newmatex.o \
		.obj/newmatrm.o \
		.obj/nm_misc.o \
		.obj/sort.o \
		.obj/submat.o \
		.obj/svd.o
DIST          = /usr/local/Trolltech/Qt-4.8.5/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base-unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-base.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/release.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/staticlib.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/static.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/include_source_dir.prf \
		newmat.pro
QMAKE_TARGET  = newmat
DESTDIR       = 
TARGET        = libnewmat.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: newmat.pro  /usr/local/Trolltech/Qt-4.8.5/mkspecs/linux-g++/qmake.conf /usr/local/Trolltech/Qt-4.8.5/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base-unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-base.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-unix.conf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/release.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/staticlib.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/static.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/include_source_dir.prf \
		/usr/local/Trolltech/Qt-4.8.5/lib/libQtGui.prl \
		/usr/local/Trolltech/Qt-4.8.5/lib/libQtCore.prl
	$(QMAKE) -o Makefile newmat.pro
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/unix.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/linux.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/gcc-base-unix.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-base.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/common/g++-unix.conf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/qconfig.pri:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_functions.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt_config.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/exclusive_builds.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_pre.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/release.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/default_post.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/staticlib.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/static.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/warn_on.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/qt.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/unix/thread.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/moc.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/resources.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/uic.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/yacc.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/lex.prf:
/usr/local/Trolltech/Qt-4.8.5/mkspecs/features/include_source_dir.prf:
/usr/local/Trolltech/Qt-4.8.5/lib/libQtGui.prl:
/usr/local/Trolltech/Qt-4.8.5/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile newmat.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/newmat1.0.0 || $(MKDIR) .obj/newmat1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/newmat1.0.0/ && $(COPY_FILE) --parents controlw.h include.h myexcept.h newmatap.h newmat.h newmatio.h newmatrc.h newmatrm.h precisio.h .obj/newmat1.0.0/ && $(COPY_FILE) --parents bandmat.cpp cholesky.cpp evalue.cpp fft.cpp hholder.cpp jacobi.cpp myexcept.cpp newfft.cpp newmat1.cpp newmat2.cpp newmat3.cpp newmat4.cpp newmat5.cpp newmat6.cpp newmat7.cpp newmat8.cpp newmat9.cpp newmatex.cpp newmatrm.cpp nm_misc.cpp sort.cpp submat.cpp svd.cpp .obj/newmat1.0.0/ && (cd `dirname .obj/newmat1.0.0` && $(TAR) newmat1.0.0.tar newmat1.0.0 && $(COMPRESS) newmat1.0.0.tar) && $(MOVE) `dirname .obj/newmat1.0.0`/newmat1.0.0.tar.gz . && $(DEL_FILE) -r .obj/newmat1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

.obj/bandmat.o: bandmat.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/bandmat.o bandmat.cpp

.obj/cholesky.o: cholesky.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/cholesky.o cholesky.cpp

.obj/evalue.o: evalue.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h \
		newmatrm.h \
		precisio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/evalue.o evalue.cpp

.obj/fft.o: fft.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/fft.o fft.cpp

.obj/hholder.o: hholder.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/hholder.o hholder.cpp

.obj/jacobi.o: jacobi.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h \
		precisio.h \
		newmatrm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/jacobi.o jacobi.cpp

.obj/myexcept.o: myexcept.cpp include.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/myexcept.o myexcept.cpp

.obj/newfft.o: newfft.cpp newmatap.h \
		newmat.h \
		include.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newfft.o newfft.cpp

.obj/newmat1.o: newmat1.cpp newmat.h \
		include.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat1.o newmat1.cpp

.obj/newmat2.o: newmat2.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat2.o newmat2.cpp

.obj/newmat3.o: newmat3.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat3.o newmat3.cpp

.obj/newmat4.o: newmat4.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat4.o newmat4.cpp

.obj/newmat5.o: newmat5.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat5.o newmat5.cpp

.obj/newmat6.o: newmat6.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat6.o newmat6.cpp

.obj/newmat7.o: newmat7.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat7.o newmat7.cpp

.obj/newmat8.o: newmat8.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h \
		precisio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat8.o newmat8.cpp

.obj/newmat9.o: newmat9.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatio.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmat9.o newmat9.cpp

.obj/newmatex.o: newmatex.cpp include.h \
		newmat.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmatex.o newmatex.cpp

.obj/newmatrm.o: newmatrm.cpp newmat.h \
		include.h \
		myexcept.h \
		newmatrm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/newmatrm.o newmatrm.cpp

.obj/nm_misc.o: nm_misc.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/nm_misc.o nm_misc.cpp

.obj/sort.o: sort.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sort.o sort.cpp

.obj/submat.o: submat.cpp include.h \
		newmat.h \
		myexcept.h \
		newmatrc.h \
		controlw.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/submat.o submat.cpp

.obj/svd.o: svd.cpp include.h \
		newmatap.h \
		newmat.h \
		myexcept.h \
		newmatrm.h \
		precisio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/svd.o svd.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

